<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixindu.apply.core.lender.dao.LenderAddressMapper">
      <resultMap id="BaseResultMap" type="com.zhixindu.apply.core.lender.domain.LenderAddress">
        <id column="address_id" jdbcType="INTEGER" property="address_id" />
        <result column="lender_id" jdbcType="INTEGER" property="lender_id" />
        <result column="home_address_code" jdbcType="INTEGER" property="home_address_code" />
        <result column="home_address" jdbcType="VARCHAR" property="home_address" />
        <result column="work_state" jdbcType="INTEGER" property="work_state" />
        <result column="company_name" jdbcType="VARCHAR" property="company_name" />
        <result column="company_address_code" jdbcType="INTEGER" property="company_address_code" />
        <result column="company_address" jdbcType="VARCHAR" property="company_address" />
      </resultMap>

      <sql id="Base_Column_List">
        address_id, lender_id, home_address_code, home_address, work_state, company_name,
        company_address_code, company_address
      </sql>

      <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lender_address
        where address_id = #{address_id,jdbcType=INTEGER}
      </select>

      <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from lender_address
        where address_id = #{address_id,jdbcType=INTEGER}
      </delete>

      <insert id="insert" parameterType="com.zhixindu.apply.core.lender.domain.LenderAddress">
        insert into lender_address (address_id, lender_id, home_address_code,
          home_address, work_state, company_name,
          company_address_code, company_address)
        values (#{address_id,jdbcType=INTEGER}, #{lender_id,jdbcType=INTEGER}, #{home_address_code,jdbcType=INTEGER},
          #{home_address,jdbcType=VARCHAR}, #{work_state,jdbcType=INTEGER}, #{company_name,jdbcType=VARCHAR},
          #{company_address_code,jdbcType=INTEGER}, #{company_address,jdbcType=VARCHAR})
      </insert>

      <insert id="insertSelective" parameterType="com.zhixindu.apply.core.lender.domain.LenderAddress">
        insert into lender_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="address_id != null">
            address_id,
          </if>
          <if test="lender_id != null">
            lender_id,
          </if>
          <if test="home_address_code != null">
            home_address_code,
          </if>
          <if test="home_address != null">
            home_address,
          </if>
          <if test="work_state != null">
            work_state,
          </if>
          <if test="company_name != null">
            company_name,
          </if>
          <if test="company_address_code != null">
            company_address_code,
          </if>
          <if test="company_address != null">
            company_address,
          </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="address_id != null">
            #{address_id,jdbcType=INTEGER},
          </if>
          <if test="lender_id != null">
            #{lender_id,jdbcType=INTEGER},
          </if>
          <if test="home_address_code != null">
            #{home_address_code,jdbcType=INTEGER},
          </if>
          <if test="home_address != null">
            #{home_address,jdbcType=VARCHAR},
          </if>
          <if test="work_state != null">
            #{work_state,jdbcType=INTEGER},
          </if>
          <if test="company_name != null">
            #{company_name,jdbcType=VARCHAR},
          </if>
          <if test="company_address_code != null">
            #{company_address_code,jdbcType=INTEGER},
          </if>
          <if test="company_address != null">
            #{company_address,jdbcType=VARCHAR},
          </if>
        </trim>
      </insert>

      <update id="updateByPrimaryKeySelective" parameterType="com.zhixindu.apply.core.lender.domain.LenderAddress">
        update lender_address
        <set>
          <if test="lender_id != null">
            lender_id = #{lender_id,jdbcType=INTEGER},
          </if>
          <if test="home_address_code != null">
            home_address_code = #{home_address_code,jdbcType=INTEGER},
          </if>
          <if test="home_address != null">
            home_address = #{home_address,jdbcType=VARCHAR},
          </if>
          <if test="work_state != null">
            work_state = #{work_state,jdbcType=INTEGER},
          </if>
          <if test="company_name != null">
            company_name = #{company_name,jdbcType=VARCHAR},
          </if>
          <if test="company_address_code != null">
            company_address_code = #{company_address_code,jdbcType=INTEGER},
          </if>
          <if test="company_address != null">
            company_address = #{company_address,jdbcType=VARCHAR},
          </if>
        </set>
        where address_id = #{address_id,jdbcType=INTEGER}
      </update>

      <update id="updateByPrimaryKey" parameterType="com.zhixindu.apply.core.lender.domain.LenderAddress">
        update lender_address
        set lender_id = #{lender_id,jdbcType=INTEGER},
          home_address_code = #{home_address_code,jdbcType=INTEGER},
          home_address = #{home_address,jdbcType=VARCHAR},
          work_state = #{work_state,jdbcType=INTEGER},
          company_name = #{company_name,jdbcType=VARCHAR},
          company_address_code = #{company_address_code,jdbcType=INTEGER},
          company_address = #{company_address,jdbcType=VARCHAR}
        where address_id = #{address_id,jdbcType=INTEGER}
      </update>

    <select id="selectByLenderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lender_address
        where lender_id = #{lender_id,jdbcType=INTEGER}
    </select>

</mapper>